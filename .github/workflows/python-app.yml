name: 宜昌市信用数据自动采集

on:
  schedule:
    - cron: '0 20 * * *'  # 每天UTC时间20:00运行（北京时间次日04:00）
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  data-collect:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install pycryptodome==3.19.1 requests==2.31.0 openpyxl==3.1.2

    - name: 执行数据采集
      id: export
      run: |
        # 生成时间戳并设置为输出变量
        ts=$(date +%Y%m%d%H%M)
        echo "ts=${ts}" >> $GITHUB_OUTPUT
        
        # 清理历史文件
        mkdir -p excel_output
        find excel_output/ -maxdepth 1 -type f -name "*.xlsx" -delete
        
        # 执行采集脚本
        python3 main.py
        
        # 重命名生成的文件（添加时间戳）
        original_file=$(ls excel_output/*.xlsx | head -n 1)
        new_file="excel_output/宜昌市信用数据_${ts}.xlsx"
        [ -f "$original_file" ] && mv "$original_file" "$new_file"
        
        # 验证文件生成
        if [ ! -f "$new_file" ]; then
            echo "::error:: 文件生成失败"
            exit 1
        fi
        echo "file-path=${new_file}" >> $GITHUB_OUTPUT

    - name: 上传数据文件
      uses: actions/upload-artifact@v4
      with:
        name: enterprise-data
        path: ${{ steps.export.outputs.file-path }}
        retention-days: 7

    - name: 提交到仓库
      run: |
        # 配置Git身份
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # 创建历史数据目录
        mkdir -p historical_data
        
        # 移动文件到历史目录
        if [ -f "${{ steps.export.outputs.file-path }}" ]; then
          mv "${{ steps.export.outputs.file-path }}" "historical_data/"
        else
          echo "::warning:: 未找到需要提交的文件"
          exit 0
        fi
        
        # 提交变更
        git add .
        git commit -m "📊 信用数据更新 [${{ steps.export.outputs.ts }}]" || echo "没有变更可提交"
        
        # 强制推送（注意安全）
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
